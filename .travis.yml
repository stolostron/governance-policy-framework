language: go
go:
- 1.20.x
services:
- docker
branches:
  only:
  - main
if: type != pull_request AND type != push
env:
  global:
  - OS=linux
  - CLI_DESTINATION_DIR=${TRAVIS_BUILD_DIR}/bin
  - PATH=${PATH}:${CLI_DESTINATION_DIR}
stages:
# - init
- prepare
- test-e2e
- test-etcd-encryption
- ff
# - hibernate
before_install:
- mkdir -p $CLI_DESTINATION_DIR
- ${TRAVIS_BUILD_DIR}/build/download-clis.sh
after_failure:
- |
  [[ "$TRAVIS_BUILD_STAGE_NAME" == "test-"* ]] && make e2e-debug-dump
  # ./build/set-claim.sh --hibernate
jobs:
  include:
  # - stage: init
  #   name: Wake up cluster
  #   script: ./build/set-claim.sh
  - stage: prepare
    name: Patch cluster to latest
    script:
    - ${TRAVIS_BUILD_DIR}/build/patch-cluster.sh
  - stage: prepare
    name: Clean up cluster
    script:
    - ${TRAVIS_BUILD_DIR}/build/clean-up-cluster.sh
  - stage: test-e2e
    name: Governance framework e2e tests
    script:
    - ${TRAVIS_BUILD_DIR}/build/run-e2e-tests.sh
  - stage: test-e2e
    name: Governance framework e2e tests with deployOnHub=true
    env:
    - deployOnHub=true
    script:
    - ${TRAVIS_BUILD_DIR}/build/run-e2e-tests.sh
  - stage: test-e2e
    name: Test grc-framework
    env:
    - GINKGO_LABEL_FILTER=!etcd
    script:
    - |
      docker pull quay.io/stolostron/grc-policy-framework-tests:latest
      ${TRAVIS_BUILD_DIR}/build/run-e2e-tests-policy-framework.sh quay.io/stolostron/grc-policy-framework-tests:latest
  - stage: test-etcd-encryption
    name: Test etcd-encryption policy
    env:
    - GINKGO_LABEL_FILTER=etcd
    script:
    - |
      docker pull quay.io/stolostron/grc-policy-framework-tests:latest
      ${TRAVIS_BUILD_DIR}/build/run-e2e-tests-policy-framework.sh quay.io/stolostron/grc-policy-framework-tests:latest
  - stage: ff
    name: Fast forwarding GRC repos
    script: "./build/ff.sh"
  # - stage: hibernate
  #   name: Hibernate cluster
  #   script: ./build/set-claim.sh --hibernate
notifications:
  slack:
    on_pull_requests: false
    rooms:
      - secure: pcYmgYcYjw7Vbw6joOIQfRNF+PuRbrEZK5Ttptm0CyI54QVg/7StGVSFkjCja+wWA00kC91O49fJRWtrqyhQuilZ/ElcnnqjqSS8rfeclGU7kS4jM/1eywOg8D7di0l29mvcrQaTaSI408nWzns+UA7YhT/TwNXCFpQlfO48pxnljeqE6zg7J+YypYdHev07lP/O7huF+rl/UH3VKfW2P03tMiLiu+iJrA6wMfUjqQj58roc4ojyvXnuusradkYZwa/I4SR1epyACb0Z8YLK43bW74bn5Qg7LT7kHQwjak4OeL4db2vXNnwrEx6qMKGagAofXX+0pyyjw804C82ENsIPE6f5AV0alV8+ySQTVp4Qj5vJnZszw9n0G9LeE9rbQ5RrW9ipYGtp+PoJdnbnFLW0pCuQiA34ay4Zr2qXkYKXI0zz9gH+dbjZDLLT9dKQf/WwutbNCu+0e5i1H9pjLdeEQheY0Ycueo1bt7at3DgVPN06UGCoWbD0GeVHgvP+78XNjcMcm4//sZEKCwsCBbFFvcmF4WA17KXyhlbX7K9rORHRp/nijgJuHAEs4VX0eynBrEUDvaVkRPYi/bLJFU/uoxaiT9ZGHqjx3TNWtg/ca2tdLjDiJdxz7KrVXThTNIkyU1VkvAC3Kek8n7xuNkL/3hJXjqJpOHX0Cb9+NK0=
    template:
      - GRC integration e2e test %{result} in %{duration}
      - "Build details: %{build_url}"
    on_success: always
    on_failure: always
  webhooks:
    urls:
    - secure: jiUa9BJ6QbUdkXhFIf3JxxUOP3vOeUqQhjPKI6t8B6OvMI/8JBUXyi0WyEcw9wqObeQ73opRzZOElY2T3sD0DO7JrOEn4+iM9LhkbZkxNwi0X3j2ASa+LSQakXqMlul+gYjaw3nvPrAV0CEyJ6KSFnI2GtxDaHiPHstL993hn4a5NfkXiwxc6bzli/grKcnb8neEGcXdjsPHzatCXD6Hrpac1+g/mGrfXVm5jwKIbtno38Rnumfn0tiHnufdSYj0G4mfRPfJFSo7m8JqM6YpzIyKWDMPfZURBpfEdECqxjgFx3HzTnwZ4Sc3Symy4Vdtc11l/JjcKqxG2M3U3e3DayzseniNFDmhPGst2plvc+Q9UsCKJrXUB0FjPl2RD8wg+0gZL2WNFRdvNkSlSJ6OBB2/846OcODZ1kWCC6NOnxFzKQJ9mDcbUuqtLvndB282SLA4c+QWh3XgEeGI2qIgPipwDfHF0BcOtPalZck8REp7khcskEhu6KpjK5YhMxbzRBUEYLdNmBAl0SdDppOUcZRFYy/2fPkAeuQzVbZgIfIqBFOflHVHn0q1pp7Hgy0DL1kMZ4ohUH3RgLdjrrKLnFTGeaQIhUjyrqvNM35UpMyoLFOM5MsQ2hsVThqiaV9ucThRBDFr1YDoR8i/z3T6Lv4lsafIm9NlRbcSO/PUD0k=
