name: Code Health Check

on:
  schedule:
    - cron: "0 6 * * *"

defaults:
  run:
    shell: bash

jobs:
  checks:
    name: Code Health Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Policy Framework
        uses: actions/checkout@v3
        with:
          # `repository` is inferred as the "caller" repository
          path: framework
          # `ref` is inferred as the new commit

      - name: CI Check
        id: ci_check
        working-directory: framework
        continue-on-error: true
        env:
          GITHUB_USER: ${{ secrets.WORKFLOW_USER }}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          SKIP_CLEANUP: "true"
        run: |
          ./build/periodic.sh
          echo "CI_EXIT_CODE=$?" >> ${GITHUB_ENV}

      - name: Codebase Check
        id: codebase_check
        working-directory: framework
        continue-on-error: true
        env:
          SKIP_CLONING: "true"
        run: |
          [[ -d "./stolostron/" ]] && ./build/codebase-check.sh
          echo "CODEBASE_EXIT_CODE=$?" >> ${GITHUB_ENV}

      - name: Post results to action summary
        id: results
        if: ${{ always() }}
        run: |
          echo "## CI Check :$([[ "${{ env.CI_EXIT_CODE }}" == 0 ]] && echo 'white_check_mark' || echo 'warning'):" >> ${GITHUB_STEP_SUMMARY}
          echo "" >> ${GITHUB_STEP_SUMMARY}
          echo "<details><summary>See more</summary>" >> ${GITHUB_STEP_SUMMARY}
          echo "" >> ${GITHUB_STEP_SUMMARY}
          echo "\`\`\`" >> ${GITHUB_STEP_SUMMARY}
          cat summary-ci-errors.log >> ${GITHUB_STEP_SUMMARY}
          echo "\`\`\`" >> ${GITHUB_STEP_SUMMARY}
          echo "" >> ${GITHUB_STEP_SUMMARY}
          echo "</details>" >> ${GITHUB_STEP_SUMMARY}
          echo "" >> ${GITHUB_STEP_SUMMARY}

          echo "## Codebase Check :$([[ "${{ env.CODEBASE_EXIT_CODE }}" == 0 ]] && echo 'white_check_mark' || echo 'warning'):" >> ${GITHUB_STEP_SUMMARY}
          echo "" >> ${GITHUB_STEP_SUMMARY}
          echo "<details><summary>See more</summary>" >> ${GITHUB_STEP_SUMMARY}
          echo "" >> ${GITHUB_STEP_SUMMARY}
          echo "\`\`\`" >> ${GITHUB_STEP_SUMMARY}
          cat summary-codebase-errors.log >> ${GITHUB_STEP_SUMMARY}
          echo "\`\`\`" >> ${GITHUB_STEP_SUMMARY}
          echo "" >> ${GITHUB_STEP_SUMMARY}
          echo "</details>" >> ${GITHUB_STEP_SUMMARY}

      - name: Send result to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        if: ${{ always() }}
        env:
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          SLACK_WEBHOOK_URL: ${{ secrets.CODE_HEALTH_SLACK_WEBHOOK }}
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":${{ github.action_status == 'success' && 'white_check_mark' || 'warning' }}: Codebase health check ${{ github.action_status }}: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run> :${{ github.action_status == 'success' && 'white_check_mark' || 'warning' }}:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "- :${{ env.CI_EXIT_CODE == 0 && 'white_check_mark' || 'warning' }}: CI check"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "- :${{ env.CODEBASE_EXIT_CODE == 0 && 'white_check_mark' || 'warning' }}: Codebase check"
                  }
                }
              ]
            }
