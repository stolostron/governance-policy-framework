apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: compliance-api-gk
  namespace: open-cluster-management-global-set
  annotations:
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  remediationAction: inform
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: templates.gatekeeper.sh/v1
        kind: ConstraintTemplate
        metadata:
          name: complianceapitest
          annotations:
            metadata.gatekeeper.sh/title: "Required Labels"
            metadata.gatekeeper.sh/version: 1.0.0
            description: >-
              Requires resources to contain specified labels, with values matching provided regular expressions.
        spec:
          crd:
            spec:
              names:
                kind: ComplianceAPITest
              validation:
                legacySchema: false
                openAPIV3Schema:
                  type: object
                  properties:
                    message:
                      type: string
                    labels:
                      type: array
                      description: >-
                        A list of labels and values the object must specify.
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            description: >-
                              The required label.
                          allowedRegex:
                            type: string
                            description: >-
                              If specified, a regular expression the annotation's value must match. The value must
                              contain at least one match for the regular expression.
          targets:
            - target: admission.k8s.gatekeeper.sh
              rego: |
                package k8srequiredlabels

                get_message(parameters, _default) = msg {
                  not parameters.message
                  msg := _default
                }

                get_message(parameters, _default) = msg {
                  msg := parameters.message
                }

                violation[{"msg": msg, "details": {"missing_labels": missing}}] {
                  input.review.object.metadata.name != "kube-root-ca.crt"
                  input.review.object.metadata.name != "openshift-service-ca.crt"
                  provided := {label | input.review.object.metadata.labels[label]}
                  required := {label | label := input.parameters.labels[_].key}
                  missing := required - provided
                  count(missing) > 0
                  def_msg := sprintf("you must provide labels: %v", [missing])
                  msg := get_message(input.parameters, def_msg)
                }

                violation[{"msg": msg}] {
                  input.review.object.metadata.name != "kube-root-ca.crt"
                  input.review.object.metadata.name != "openshift-service-ca.crt"
                  value := input.review.object.metadata.labels[key]
                  expected := input.parameters.labels[_]
                  expected.key == key
                  # do not match if allowedRegex is not defined, or is an empty string
                  expected.allowedRegex != ""
                  not re_match(expected.allowedRegex, value)
                  def_msg := sprintf("Label <%v: %v> does not satisfy allowed regex: %v", [key, value, expected.allowedRegex])
                  msg := get_message(input.parameters, def_msg)
                }
    - objectDefinition:
        apiVersion: constraints.gatekeeper.sh/v1beta1
        kind: ComplianceAPITest
        metadata:
          name: compliance-api
        spec:
          enforcementAction: dryrun
          match:
            name: compliance-api-*
            kinds:
              - apiGroups: [""]
                kinds: ["ConfigMap"]
            scope: Namespaced
            namespaces:
              - compliance-api-test
          parameters:
            message: "All configmaps must have a 'my-gk-test' label"
            labels:
            - key: "my-gk-test"
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: compliance-api-gk
  namespace: open-cluster-management-global-set
spec: {}
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: compliance-api-gk
  namespace: open-cluster-management-global-set
placementRef:
  name: compliance-api-gk
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: compliance-api-gk
    apiGroup: policy.open-cluster-management.io
    kind: Policy
